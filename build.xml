<project name="alphaTab" default="haxe-js" basedir=".">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <description>
        a buildfile for creating alphaTab releases
    </description>
    
	<property name="release" location="releases"/>
	<property name="tools" location="tools"/>
	
    <!--*************************************************************************
        General
    **************************************************************************-->
    
    <!-- Main Properties -->
	<property name="bin" location="bin"/>
	<property name="src" location="src"/>

    <target name="global-init">
		<tstamp/>
	</target>
    
    <!--*************************************************************************
        Building JavaScript
    **************************************************************************-->
    
    <property name="bin-js" location="${bin}/js"/>
	<property name="lib-js" location="${bin-js}/lib/alphaTab"/>
	<property name="lib-support" location="${bin-js}/lib/support"/>
	<property name="css-support" location="${bin}/css"/>
	<property name="haxe-js" location="${lib-js}/alphaTab.js"/>
    
    <!-- Java-Player Properties -->	
	<property name="player-base" location="subprojects/java-player"/>	
	<property name="player-src" location="${player-base}/src"/>	
	<property name="player-jnilib" location="${player-base}/jni"/>	
	<property name="player-bin" location="${player-base}/bin"/>	
	<property name="player-jar" location="${lib-js}/alphaTab.jar"/>	
	<property name="player-jar-signed" location="${lib-js}/alphaTabS.jar"/>	
	<property file="jarsigning.properties"/>

	<!-- Java Player -->  
	<target name="java-player" depends="global-init">
		<!-- Create Build Directory -->
		<mkdir dir="${player-bin}" />

		<!-- Compile Sources -->
		<echo message="compiling midi player"/>
		<javac includeantruntime="false" srcdir="${player-src}" destdir="${player-bin}" classpath="C:/Program Files/Java/jre6/lib/plugin.jar" failonerror="true" />

		<!-- Copy .jnilib for Mac OSX -->
		<echo message="copying .jnilib to ${player-bin}"/>
		<copy todir="${player-bin}" overwrite="true">
			<fileset dir="${player-jnilib}" />
		</copy>

		<!-- Package Jar -->
		<echo message="create midi player jar"/>
		<delete file="${player-jar}" />
		<jar jarfile="${player-jar}" basedir="${player-bin}" />
		
		<!-- Sign Jar -->
		<echo message="signing jarfile" />
		<exec dir="C:\Program Files (x86)\Java\jdk1.6.0_26\bin" executable="jarsigner">
			<arg line="-keystore ${keystore}" />
			<arg line="-storepass ${storepass}" />
			<arg line='-signedjar "${player-jar-signed}"' />
			<arg line='"${player-jar}"' />
			<arg line="signFiles" />
		</exec>

		<!-- Remove Build Directory -->
		<delete dir="${player-bin}" />
	</target>	
	
	<!-- Haxe Builds -->
	<target name="haxe-js" depends="global-init">
		<delete file="${haxe-js}" />
        <exec executable="haxe" failonerror="true">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-js" />
            <arg value="${haxe-js}" />
        </exec>
	</target>	

	<target name="haxe-js-debug" depends="global-init">
		<delete file="${haxe-js}" />
        <exec executable="haxe" failonerror="true">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-js" />
            <arg value="${haxe-js}" /> 
            
            <arg value="-D" />
            <arg value="DEBUG_DRAWING" />
        </exec>
	</target>	
    
    <!--*************************************************************************
        Building C# 
    **************************************************************************-->

    <property name="haxe-cs" location="${bin}/cs"/>
	<target name="haxe-cs" depends="global-init">
		<delete dir="${haxe-cs}" />
		<mkdir dir="${haxe-cs}" />
        <exec executable="haxe" failonerror="true">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-js" />
            <arg value="${haxe-cs}" />
            
            <arg value="--js-namespace" />
            <arg value="AlphaTab" />
        	
        	<arg value="-D" />
        	<arg value="cs" />
            
        	<arg value="--macro" />
            <arg value="alphatab.compiler.AlphaTabCsGenerator.use()" />
        </exec>
	</target>	
   
    <!--*************************************************************************
        Building C++
    **************************************************************************-->

    <property name="haxe-cpp" location="${bin}/hxcpp"/>
    <target name="haxe-cpp" depends="global-init">
		<delete dir="${haxe-cpp}" />
		<mkdir dir="${haxe-cpp}" />
        <exec executable="haxe" failonerror="true">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
                        
            <arg value="-cpp" />
            <arg value="${haxe-cpp}" />
            
            <arg value="-D" />
            <arg value="static" />
        </exec>
    </target>
       
    <!--*************************************************************************
        Building C++
    **************************************************************************-->

    <property name="haxe-neko" location="${bin}/neko/alphaTab.n"/>
    <target name="haxe-neko" depends="global-init">
		<delete file="${haxe-neko}" />
        <exec executable="haxe" failonerror="true">
            <arg value="-cp" />
            <arg value="${src}"/>
            
            <arg value="-main" />
            <arg value="alphatab.Main" />
            
            <arg value="-neko" />
            <arg value="${haxe-neko}" />
        </exec>
    </target>
   
	
    <!--*************************************************************************
        Package Release (JavaScript)
    **************************************************************************-->

    <!-- Release -->
	<target name="release-init" depends="java-player">
		<delete dir="${release}/${DSTAMP}" />
		<mkdir dir="${release}/${DSTAMP}" />
		<mkdir dir="${release}/${DSTAMP}/lib" />
		<mkdir dir="${release}/${DSTAMP}/lib/support" />
	</target>	
		
	<target name="release" depends="release-init,haxe-js">
		<echo message="copying release files to ${release}/${DSTAMP}"/>
		<!-- copy distribution files -->		
		<copy todir="${release}/${DSTAMP}" overwrite="true">
			<fileset dir="${bin-js}" />
		</copy>
		<echo message="copying supporting css files to ${release}/${DSTAMP}/demo/css"/>
		<copy todir="${release}/${DSTAMP}/demo/css" overwrite="true">
			<fileset dir="${css-support}" />
		</copy>
		<echo message="copying supporting javascript files to ${release}/${DSTAMP}/lib/support"/>
		<copy todir="${release}/${DSTAMP}/lib/support" overwrite="true">
			<fileset dir="${lib-support}" />
		</copy>
		<echo message="minify alphaTab.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/alphaTab.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/alphaTab.min.js" />
		</java>
		
		<echo message="minify jquery.alphaTab.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.min.js" />
		</java>
		
		<echo message="minify jquery.alphaTab.player.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.player.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.player.min.js" />
		</java>
		
		<echo message="minify jquery.hotkeys.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/support/jquery.hotkeys.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/support/jquery.hotkeys.min.js" />
		</java>
		
		<echo message="minify browserDetect.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/support/browserDetect.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/support/browserDetect.min.js" />
		</java>
		
		<echo message="minify jquery.alphaTab.player.include.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.player.include.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphaTab/jquery.alphaTab.player.include.min.js" />
		</java>
		
		<echo message="Concatenate all JS files"/>
		<concat destfile="${release}/${DSTAMP}/lib/alphalib.js" force="yes">
			<filelist dir="${release}/${DSTAMP}/lib">
				<file name="support/jquery.hotkeys.min.js" />
				<file name="alphaTab/alphaTab.min.js" />
				<file name="alphaTab/jquery.alphaTab.min.js" />
				<file name="support/jquery-ui-1.8.14.custom.min.js" />
				<file name="alphaTab/jquery.alphaTab.player.min.js" />
				<file name="support/deployJava.js" />
				<file name="support/browserDetect.js" />
				<file name="alphaTab/jquery.alphaTab.player.include.min.js" />
			</filelist>
		</concat>
		
		<echo message="minify alphalib.js"/>
		<java jar="${tools}\custom-closure-compiler.jar" fork="true" failonerror="true">
			<arg value="--js" />
			<arg value="${release}/${DSTAMP}/lib/alphalib.js" />
			
			<arg value="--js_output_file" />
			<arg value="${release}/${DSTAMP}/lib/alphalib.min.js" />
		</java>
        
        <!-- Remove Web files from demo -->
        <echo message="deleting php files and .htaccess" />
        <delete>
            <fileset dir="${release}/${DSTAMP}/demo" includes="**/*.php" />
        </delete>
        <delete file="${release}/${DSTAMP}/demo/.htaccess" />
         
        <!-- This is breaking builds! Not cool ;)
        Retrieve all samples from webserver
        <echo message="loading test pages from webserver" />
        <foreach target="receiveSample" param="samplepath">
            <path>
                <fileset dir="${bin}/demo/samples" includes="*.html" />
            </path>
        </foreach>  
         -->
        		
		<!-- replace javascript include to minified javascript -->
		<echo message="refreshing sample files"/>
		<replace dir="${release}/${DSTAMP}" token="alphaTab.js" value="alphaTab.min.js">
			<include name="**/*.html" />		
			<include name="**/*.php" />		
		</replace>

	</target>
<!-- This is breaking builds! Not cool ;)
    <target name="receiveSample" depends="global-init">
        <basename property="samplename" file="${samplepath}"
          suffix=".php"/>       
        <echo message="loading sample ${samplename}" />
        <get src="http://alphadev/demo/index.php?s=${samplename}.php"
            dest="${release}/${DSTAMP}/demo/${samplename}.html" />
            
    </target>
-->
</project>
